{"version":3,"sources":["App.js","components/vote.js","components/putname.js","components/largescreen.js","components/controller.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Component","VoteButton","props","title","key","keyProp","onClick","Vote","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","socket","unlockScreen","self","on","msg","round","history","push","pathname","$","addClass","removeClass","params","match","emit","voteName","name","rate","lockScreen","map","i","e","React","withRouter","PutName","state","handleSubmit","handleChange","event","setState","target","value","preventDefault","onSubmit","type","onChange","placeholder","required","Result","girl","round1","round2","Number","parseInt","LargeScreen","girls","list","voteDetails","split","girlNum","girlsT","Controller","startRound1","startRound2","reboot","disabled","Boolean","window","location","hostname","openSocket","routing","react_router_dom","react_router","exact","path","component","render","components_vote","assign","components_largescreen","components_controller","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41b47fec.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        I'M READY TO USE THE BACK END APIS! :-)\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './vote.css';\r\nimport $ from 'jquery';\r\n\r\nfunction VoteButton(props) {\r\n  let title = props.title || '1'\r\n  return <div key = {props.keyProp} onClick={props.onClick} className=\"VoteBtn btn-light btn\">\r\n    <span className=\"rate\">{title}</span>\r\n  </div>\r\n}\r\n\r\n\r\nclass Vote extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var round = 0;\r\n    var name = \"\";\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.socket = props.socket;\r\n    \r\n    this.unlockScreen = this.unlockScreen.bind(this);\r\n    var self = this;\r\n    this.socket.on('start-round1', function(msg){\r\n      self.round = 1;\r\n      self.unlockScreen();\r\n    })\r\n\r\n    this.socket.on('start-round2', function(msg){\r\n      self.round = 2;\r\n      self.unlockScreen();\r\n    })\r\n\r\n    this.socket.on('reboot', function(msg){ \r\n      let { history } = self.props;\r\n      history.push({\r\n       pathname: '/putname'\r\n      });\r\n    })\r\n  }\r\n\r\n  lockScreen(){\r\n    $('.LockingDiv').addClass('LockScreen');\r\n  }\r\n\r\n  unlockScreen() {\r\n    $('.LockingDiv').removeClass('LockScreen');\r\n  }\r\n  componentDidMount() {\r\n    const { match: { params } } = this.props;\r\n    this.socket.emit('add-name', params.voteName);\r\n    this.name = params.voteName;\r\n  }\r\n  handleClick(rate){\r\n    this.socket.emit('vote-round', this.name + '-' + this.round + '-' +  rate);\r\n    this.lockScreen();\r\n  }\r\n\r\n  render(){\r\n    const rating = [1,2,3,4,5]\r\n    let self = this\r\n    return (\r\n      <div>\r\n      <div className=\"LockingDiv LockScreen\"></div>\r\n      <div className=\"Vote\">\r\n        <h2 className=\"WhiteText\">VOTE</h2>\r\n        <h4 className=\"WhiteText\">1: I rather watch, 2: I rather date</h4>\r\n        <div className=\"VoteBox\">\r\n          {rating.map(function(rate, i) {\r\n            function onClick(e) { self.handleClick(rate) }\r\n            return <VoteButton title={rate} key={'rate-'+i} keyProp={'rate-'+i} onClick={onClick} />\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Vote);","import React from 'react'\r\nimport './putname.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PutName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: ''};\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let { history } = this.props;\r\n      history.push({\r\n      pathname: '/vote/' + this.state.name\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"NameBox\"> \r\n        <h2>Type Your Name</h2>\r\n        <form className=\"NameForm\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.handleChange} placeholder=\"\" required/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n    \r\n  }\r\n}\r\nexport default withRouter(PutName);","import React from 'react'\r\nimport './largescreen.css';\r\n\r\nfunction Result(props) {\r\n    var girl = props.girl\r\n    return <div key = {props.keyProp} className=\"ResultDiv\">\r\n        <h2>{girl.name}</h2>\r\n        <h2 className=\"LeftText\">Round 1: {girl?girl.round1:\"\"}</h2>\r\n        <h2 className=\"LeftText\">Round 2: {girl?girl.round2:\"\"}</h2>\r\n        {girl && girl.round1 && girl.round2 ? <h2 className=\"LeftText\" >Total: {Number.parseInt(girl.round1) + Number.parseInt(girl.round2)} Over 10</h2> :null}\r\n  </div>\r\n}\r\nclass LargeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { girls : [] };\r\n        this.socket = props.socket;\r\n        var self = this;\r\n\r\n        this.socket.on('reboot', function(msg){\r\n            self.setState({girls: []});\r\n        })\r\n        this.socket.on('add-name', function(msg){\r\n            var list = self.state.girls;\r\n            list.push({name: msg});\r\n            self.setState({girls: list});\r\n        })\r\n\r\n        this.socket.on('vote-round', function(msg){\r\n            const voteDetails = msg.split('-');\r\n            var girlNum = 0;\r\n            self.state.girls.map((girl, i) => {\r\n                if(girl.name == voteDetails[0]) {\r\n                    girlNum = i;\r\n                    return i;\r\n                }\r\n            })\r\n            var girlsT = self.state.girls;\r\n            girlsT[girlNum]['round' + voteDetails[1]] = voteDetails[2];\r\n            self.setState({girls: girlsT});\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"VoteBox\">\r\n                {this.state.girls.map(function(girl, i){\r\n                    return <Result girl={girl} key={'result-' + i} keyProp={'result-' + i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LargeScreen\r\n\r\n\r\n\r\n/*\r\n\r\n            {name: 'A1', round1: 5, round2: 4},\r\n            {name: 'A2', round1: 2, round2: 5},\r\n            {name: 'A3', round1: 3, round2: 2}\r\n*/","import React from 'react'\r\nimport './controller.css'\r\n\r\nclass Controller extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { round: 0 };\r\n        this.startRound1 = this.startRound1.bind(this);\r\n        this.startRound2 = this.startRound2.bind(this);\r\n        this.reboot = this.reboot.bind(this);\r\n        this.socket = props.socket;\r\n    }\r\n\r\n    startRound1(e) {\r\n        this.setState({round :1});\r\n        this.socket.emit('start-round1', \"1\");\r\n    }\r\n\r\n    startRound2(e) {\r\n        this.setState({round :2});\r\n        this.socket.emit('start-round2', \"2\");\r\n    }\r\n\r\n    reboot(e) {\r\n        this.setState({round :0});\r\n        this.socket.emit('reboot', \"0\");\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"ControllerBox\">\r\n            <button type=\"button\" className=\"btn btn-outline-warning btn-lg\" disabled={this.state.round !== 0} onClick={this.startRound1}>Start Round 1</button>\r\n            <hr />\r\n            <button type=\"button\" className=\"btn btn-outline-warning btn-lg\" disabled={this.state.round !== 1} onClick={this.startRound2}>Start Round 2</button>\r\n            <hr />\r\n            <button type=\"button\" className=\"btn btn-outline-warning btn-lg\" onClick={this.reboot}>Reboot</button>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Controller\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport Vote from './components/vote'\nimport PutName from './components/putname'\nimport LargeScreen from './components/largescreen'\nimport Controller from './components/controller'\n\nimport * as serviceWorker from './serviceWorker';\nimport { Route,  BrowserRouter as Router } from 'react-router-dom'\n\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:8000');\n\nconst routing = (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/putname\" component={PutName} />\n        <Route path=\"/vote/:voteName\" render={(props) => <Vote {...props} socket={socket} />} />\n        <Route path=\"/largescreen\" render={(props) => <LargeScreen {...props} socket={socket} />} />\n        <Route path=\"/controller\" render={(props) => <Controller {...props} socket={socket} />} />\n      </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}